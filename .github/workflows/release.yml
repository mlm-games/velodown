name: 'Release'

on:
  workflow_dispatch:
    inputs:
      mark_prerelease:
        description: 'Mark as a pre-release?'
        required: true
        default: 'false'
        type: boolean
      publish_to_aur:
        description: 'Publish to AUR?'
        required: false
        default: 'true'
        type: boolean
      publish_to_snap:
        description: 'Publish to Snapcraft?'
        required: false
        default: 'false'
        type: boolean

jobs:
  create_release_tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_version: ${{ steps.changelog.outputs.new_version }}
      changelog: ${{ steps.changelog.outputs.clean_changelog }}
      skipped: ${{ steps.changelog.outputs.skipped }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

    
    
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-prefix: 'v'
        
          git-push: true
  

  build_and_release:
    needs: create_release_tag
  
    if: needs.create_release_tag.outputs.skipped == 'false'
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

    
      - name: Update tauri.conf.json version
        run: |
          echo "Updating tauri.conf.json to version ${{ needs.create_release_tag.outputs.new_version }}"
          sed -i 's/"version": ".*"/"version": "${{ needs.create_release_tag.outputs.new_version }}"/' src-tauri/tauri.conf.json

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm install

      - name: Build the frontend
        run: npm run build

      - name: Build and create GitHub Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
        
          tagName: 'v${{ needs.create_release_tag.outputs.new_version }}'
          releaseName: 'VeloDown v${{ needs.create_release_tag.outputs.new_version }}'
          releaseBody: ${{ needs.create_release_tag.outputs.changelog }}
          releaseDraft: false
          prerelease: ${{ inputs.mark_prerelease }}


  deploy:
    needs: build_and_release
    runs-on: ubuntu-latest
    steps:
      - name: Trigger AUR Publish
        if: ${{ inputs.publish_to_aur == true }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'aur-publish.yml',
              ref: 'main',
              inputs: {
                version_name: '${{ needs.create_release_tag.outputs.new_version }}'
              }
            });

      # - name: Trigger Snapcraft Publish
      #   if: ${{ inputs.publish_to_snap == true }}
        # run: echo "Create the yml file first."
