
name: 'Release'

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Release version (e.g., 0.1.2)'
        required: true
      mark_prerelease:
        description: 'Mark as a pre-release?'
        required: true
        default: 'false'
        type: boolean
      publish_to_aur:
        description: 'Publish to AUR?'
        required: false
        default: 'true'
        type: boolean
      publish_to_snap:
        description: 'Publish to Snapcraft?'
        required: false
        default: 'true'
        type: boolean

jobs:
  version-and-changelog:
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
        
          fetch-depth: 0
    
      - name: Generate Changelog and Create Tag
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-prefix: 'v'
        
          release-version: ${{ inputs.version_name }}

    
      - name: Update Versions in Files
        run: |
          npm version ${{ inputs.version_name }} --no-git-tag-version
          sed -i 's/"version": ".*"/"version": "${{ inputs.version_name }}"/' src-tauri/tauri.conf.json

      - name: Commit and Push Version Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: Bump version to ${{ inputs.version_name }}'
          tagging_message: 'v${{ inputs.version_name }}'
        
          push_options: '--force --tags'


  build-and-release:
    needs: version-and-changelog
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm install

      - name: Build the frontend
        run: npm run build

      - name: Build and Release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
        
          tagName: 'v${{ inputs.version_name }}'
          releaseName: 'VeloDown v${{ inputs.version_name }}'
          releaseBody: 'See the assets to download this version.'
          releaseDraft: false
          prerelease: ${{ inputs.mark_prerelease }}


  deploy:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Trigger AUR Publish
        if: ${{ inputs.publish_to_aur == true }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'aur-publish.yml',
              ref: 'main',
              inputs: {
                version_name: '${{ inputs.version_name }}'
              }
            });

      # - name: Trigger Snapcraft Publish
      #   if: ${{ inputs.publish_to_snap == true }}
        # run: echo "Create the yml file first."
